{"version":3,"file":"static/js/444.8a56c205.chunk.js","mappings":"qKAAMA,EAAS,mCAAG,WAAMC,GAAN,uFACGC,MAAM,gCAAD,OACUD,EADV,6DADR,cACVE,EADU,yBAMTA,GANS,2CAAH,sDASf,K,mHCUA,EAjBiB,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACZC,GAAWC,EAAAA,EAAAA,MAEjB,OADAC,QAAQC,IAAIJ,IAEV,wBACGA,GACCA,EAAIK,KAAI,oBAAGC,eAAAA,OAAH,MAAoB,OAApB,EAA4BC,EAA5B,EAA4BA,GAA5B,EAAgCC,MAAhC,EAAuCC,SAAvC,OACN,yBACE,SAAC,KAAD,CAAMC,GAAE,iBAAYH,GAAMI,MAAO,CAAEC,KAAMX,GAAzC,SACGK,KAFIC,EADH,KASf,E,SCuCD,EAnDiB,SAAAR,GACf,OAAgCc,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,YACRtB,EAAAA,EAAAA,GAAU,oBACPuB,MAAK,SAAApB,GAAI,OAAIA,EAAKqB,MAAT,IACTD,MAAK,SAAAE,GAAI,OAAIC,EAAkBD,EAAtB,IACTE,OAAM,SAAAP,GAAK,OAAIC,EAASD,EAAMQ,QAAnB,GACf,GAAE,CAACzB,IAEJ,IAAMuB,EAAoB,SAAAD,GACxBlB,QAAQC,IAAIiB,GACZ,IAAQI,EAAYJ,EAAZI,QACR,GAAIA,EAAS,CACX,IAAMC,EAAWD,EAAQpB,KACvB,YAUE,MAAO,CACLsB,cAFE,EARJA,cAWEC,UAHE,EAPJA,UAWErB,GAJE,EANJA,GAWEsB,WALE,EALJA,WAWEvB,eANE,EAJJA,eAWEG,SAPE,EAHJA,SAWEqB,YARE,EAFJA,YAWEtB,MATE,EADJA,MAYD,IAGHO,EAAYW,EACb,CACF,EAED,OACE,2BACGV,IAAS,wBAAKA,KACf,SAAC,EAAD,CAAUhB,IAAKc,MAGpB,C,sBCtDD,SAASiB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOxB,GAEP,YADAkB,EAAOlB,EAET,CACIuB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOrB,KAAKgB,EAAOC,EAEvC,CACe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GACzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CACAf,OAAMgB,EACR,GACF,CACF,C","sources":["components/Api/Api.jsx","components/ItemCard/ItemCard.jsx","pages/HomePage.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const FetchCard = async props => {\n  const data = await fetch(\n    `https://api.themoviedb.org/3/${props}?api_key=d0d7894e72847cf4bdccbd92204adc61&language=en-US`\n  );\n  //   'https:api.themoviedb.org/3/movie/movie_id/reviews?api_key=d0d7894e72847cf4bdccbd92204adc61&language=en-US&page=1'\n  // );\n  return data;\n};\n\nexport default FetchCard;\n","import { Link, useLocation } from 'react-router-dom';\n\nconst ItemCard = ({ arr }) => {\n  const location = useLocation();\n  console.log(arr);\n  return (\n    <ul>\n      {arr &&\n        arr.map(({ original_title = 'null', id, title, overview }) => (\n          <li key={id}>\n            <Link to={`movies/${id}`} state={{ from: location }}>\n              {original_title}\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default ItemCard;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport ItemCard from '../components/ItemCard/ItemCard';\nimport FetchCard from '../components/Api/Api';\n\nconst HomePage = data => {\n  const [filmList, setFilmList] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    FetchCard(`trending/all/day`)\n      .then(data => data.json())\n      .then(resp => getFormatingArray(resp))\n      .catch(error => setError(error.message));\n  }, [data]);\n\n  const getFormatingArray = resp => {\n    console.log(resp);\n    const { results } = resp;\n    if (results) {\n      const stateArr = results.map(\n        ({\n          backdrop_path,\n          genre_ids,\n          id,\n          media_type,\n          original_title,\n          overview,\n          poster_path,\n          title,\n        }) => {\n          return {\n            backdrop_path,\n            genre_ids,\n            id,\n            media_type,\n            original_title,\n            overview,\n            poster_path,\n            title,\n          };\n        }\n      );\n\n      setFilmList(stateArr);\n    }\n  };\n\n  return (\n    <div>\n      {error && <h1>{error}</h1>}\n      <ItemCard arr={filmList} />\n    </div>\n  );\n};\n\nexport default HomePage;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["FetchCard","props","fetch","data","arr","location","useLocation","console","log","map","original_title","id","title","overview","to","state","from","useState","filmList","setFilmList","error","setError","useEffect","then","json","resp","getFormatingArray","catch","message","results","stateArr","backdrop_path","genre_ids","media_type","poster_path","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}