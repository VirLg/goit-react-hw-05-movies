{"version":3,"file":"static/js/954.76cf42db.chunk.js","mappings":"qKAAMA,EAAS,mCAAG,WAAMC,GAAN,uFACGC,MAAM,gCAAD,OACUD,EADV,6DADR,cACVE,EADU,yBAMTA,GANS,2CAAH,sDASf,K,yICRaC,EAAUC,EAAAA,QAAAA,IAAH,0DAKPC,EAAOD,EAAAA,QAAAA,IAAH,0C,SC8DjB,EA5DyB,SAAAJ,GAAU,IAAD,IAChC,GAAwBM,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAiBjB,OAfAC,EAAAA,EAAAA,YAAU,YACRd,EAAAA,EAAAA,GAAU,SAAD,OAAUU,IAChBK,MAAK,SAAAZ,GAAI,OAAIA,EAAKa,MAAT,IACTD,MAAK,SAAAE,GAAI,OACRR,EAAQ,CACNS,YAAY,kCAAD,OAAoCD,EAAKC,aACpDC,eAAe,GAAD,OAAKF,EAAKE,gBACxBC,SAAS,GAAD,OAAKH,EAAKG,UAClBC,aAAa,GAAD,OAAKJ,EAAKI,cACtBC,OAAO,GAAD,OAAKL,EAAKK,OAAOC,KAAI,kBAAc,CAAd,EAAGC,KAAH,KAC3BC,WAAW,GAAD,OAAKC,KAAKC,MAAwB,IAAlBV,EAAKQ,YAArB,MAPJ,GAUb,GAAE,CAACf,KAGF,4BACE,SAAC,KAAD,CAAMkB,GAAE,oBAAEhB,EAASiB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAKD,MAAOjB,EAA9C,sBAGA,UAACN,EAAD,YACE,SAACF,EAAD,CACE2B,UAAU,YACVC,IAAKxB,EAAKU,YACVe,IAAKzB,EAAKW,kBAEZ,4BACE,0BACGX,EAAKW,eADR,KACwB,0BAAOX,EAAKa,eADpC,QAGA,wBAAKb,EAAK0B,cACV,wBAAK1B,EAAKY,YACV,uBAAIZ,EAAKc,UACT,uBAAId,EAAKiB,oBAIb,2BACE,yBACE,SAAC,KAAD,CAAMG,GAAG,OAAOC,MAAO,CAAEC,KAAMlB,EAASiB,MAAMC,MAA9C,qBAIF,yBACE,SAAC,KAAD,CAAMF,GAAG,UAAUC,MAAO,CAAEC,KAAMlB,EAASiB,MAAMC,MAAjD,2BAKJ,SAAC,EAAAK,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C,sBCnED,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CACIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAO/B,KAAK0B,EAAOC,EAEvC,CACe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GACzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CACAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/Api/Api.jsx","pages/MoviDetailsPage.styled.js","pages/MovieDetailsPage.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const FetchCard = async props => {\n  const data = await fetch(\n    `https://api.themoviedb.org/3/${props}?api_key=d0d7894e72847cf4bdccbd92204adc61&language=en-US`\n  );\n  //   'https:api.themoviedb.org/3/movie/movie_id/reviews?api_key=d0d7894e72847cf4bdccbd92204adc61&language=en-US&page=1'\n  // );\n  return data;\n};\n\nexport default FetchCard;\n","import styled from '@emotion/styled';\nexport const ImgCard = styled.img`\n  weight: 30em;\n  height: 30em;\n`;\n\nexport const Flex = styled.div`\n  display: flex;\n`;\n","import React from 'react';\nimport { Suspense } from 'react';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport FetchCard from 'components/Api/Api';\nimport { ImgCard, Flex } from './MoviDetailsPage.styled';\n\nconst MovieDetailsPage = props => {\n  const [item, setItem] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    FetchCard(`movie/${movieId}`)\n      .then(data => data.json())\n      .then(resp =>\n        setItem({\n          poster_path: `https://image.tmdb.org/t/p/w500${resp.poster_path}`,\n          original_title: `${resp.original_title}`,\n          overview: `${resp.overview}`,\n          release_date: `${resp.release_date}`,\n          genres: `${resp.genres.map(({ name }) => [name])}`,\n          popularity: `${Math.floor(resp.popularity * 0.01)}%`,\n        })\n      );\n  }, [movieId]);\n\n  return (\n    <div>\n      <Link to={location.state?.from ?? '/'} state={location}>\n        Go back\n      </Link>\n      <Flex>\n        <ImgCard\n          className=\"img__card\"\n          src={item.poster_path}\n          alt={item.original_title}\n        />\n        <div>\n          <h1>\n            {item.original_title}(<span>{item.release_date}</span>)\n          </h1>\n          <h2>{item.vote_count}</h2>\n          <h3>{item.overview}</h3>\n          <p>{item.genres}</p>\n          <p>{item.popularity}</p>\n        </div>\n      </Flex>\n\n      <ul>\n        <li>\n          <Link to=\"cast\" state={{ from: location.state.from }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: location.state.from }}>\n            Gallery\n          </Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\nexport default MovieDetailsPage;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["FetchCard","props","fetch","data","ImgCard","styled","Flex","useState","item","setItem","movieId","useParams","location","useLocation","useEffect","then","json","resp","poster_path","original_title","overview","release_date","genres","map","name","popularity","Math","floor","to","state","from","className","src","alt","vote_count","Suspense","fallback","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}