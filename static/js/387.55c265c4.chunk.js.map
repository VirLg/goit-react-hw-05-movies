{"version":3,"file":"static/js/387.55c265c4.chunk.js","mappings":"qKAAMA,EAAS,mCAAG,WAAMC,GAAN,uFACGC,MAAM,gCAAD,OACUD,EADV,6DADR,cACVE,EADU,yBAMTA,GANS,2CAAH,sDASf,K,sHCPaC,EAFeC,EAAQ,KAA5BC,QAEsBC,IAAV,0D,SCsCpB,EAnCa,WACX,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,YACRf,EAAAA,EAAAA,GAAU,SAAD,OAAUa,EAAV,aACNG,MAAK,SAAAb,GAAI,OAAIA,EAAKc,MAAT,IACTD,MAAK,SAAAE,GAAI,OAAIN,EAAQM,EAAKP,KAAjB,IACTQ,OAAM,SAAAV,GAAK,OAAIC,EAASD,EAAMW,QAAnB,GACf,GAAE,CAACP,IACJQ,QAAQC,IAAIb,IACGc,EAAAA,EAAAA,UAAQ,WACrB,OAAOZ,EAAKa,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GACrC,MAAO,CACLF,aAAa,kCAAD,OAAoCA,EAApC,QACZC,KAAAA,EACAC,GAAAA,EAEH,GACF,GAAE,CAAChB,IAEUa,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GACvC,OACE,2BACE,yBACE,SAACvB,EAAD,CAASwB,IAAKH,EAAcI,IAAKH,OAGnC,wBAAKA,MALEC,EAQZ,GACF,C,sBCtCD,SAASG,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAO9B,GAEP,YADAwB,EAAOxB,EAET,CACI6B,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOvB,KAAKkB,EAAOC,EAEvC,CACe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GACzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CACAf,OAAMgB,EACR,GACF,CACF,C","sources":["components/Api/Api.jsx","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const FetchCard = async props => {\n  const data = await fetch(\n    `https://api.themoviedb.org/3/${props}?api_key=d0d7894e72847cf4bdccbd92204adc61&language=en-US`\n  );\n  //   'https:api.themoviedb.org/3/movie/movie_id/reviews?api_key=d0d7894e72847cf4bdccbd92204adc61&language=en-US&page=1'\n  // );\n  return data;\n};\n\nexport default FetchCard;\n","const { default: styled } = require('@emotion/styled');\n\nexport const ImgCast = styled.img`\n  weight: 10em;\n  height: 10em;\n`;\n","import React from 'react';\nimport { useEffect, useState, useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport FetchCard from 'components/Api/Api';\nimport { ImgCast } from './Cast.styled';\nconst Cast = () => {\n  const [error, setError] = useState('');\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    FetchCard(`movie/${movieId}/credits`)\n      .then(data => data.json())\n      .then(resp => setCast(resp.cast))\n      .catch(error => setError(error.message));\n  }, [movieId]);\n  console.log(error);\n  const render = useMemo(() => {\n    return cast.map(({ profile_path, name, id }) => {\n      return {\n        profile_path: `https://image.tmdb.org/t/p/w500${profile_path}??''`,\n        name,\n        id,\n      };\n    });\n  }, [cast]);\n\n  return render.map(({ profile_path, name, id }) => {\n    return (\n      <ul key={id}>\n        <li>\n          <ImgCast src={profile_path} alt={name} />\n        </li>\n\n        <li>{name}</li>\n      </ul>\n    );\n  });\n};\n\nexport default Cast;\n// {murkup && murkup.map( => console.log(name))}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["FetchCard","props","fetch","data","ImgCast","require","default","img","useState","error","setError","cast","setCast","movieId","useParams","useEffect","then","json","resp","catch","message","console","log","useMemo","map","profile_path","name","id","src","alt","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}